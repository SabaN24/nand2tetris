// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=xa, b=xb, c=xc, d=xd, e=xe, f=xf, g=xg, h=xh);
    RAM8(in=in, load=xa, address=address[0..2], out=ya);
    RAM8(in=in, load=xb, address=address[0..2], out=yb);
    RAM8(in=in, load=xc, address=address[0..2], out=yc);
    RAM8(in=in, load=xd, address=address[0..2], out=yd);
    RAM8(in=in, load=xe, address=address[0..2], out=ye);
    RAM8(in=in, load=xf, address=address[0..2], out=yf);
    RAM8(in=in, load=xg, address=address[0..2], out=yg);
    RAM8(in=in, load=xh, address=address[0..2], out=yh);
    Mux8Way16(a=ya, b=yb, c=yc, d=yd, e=ye, f=yf, g=yg, h=yh, sel=address[3..5], out=out);
}